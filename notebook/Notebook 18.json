{
	"name": "Notebook 18",
	"properties": {
		"folder": {
			"name": "test"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"runAsWorkspaceSystemIdentity": false,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "327f26b7-f673-47b4-810d-33b3428d7ade"
			}
		},
		"metadata": {
			"saveOutput": true,
			"synapse_widget": {
				"version": "0.1"
			},
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "python"
			},
			"language_info": {
				"name": "python"
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"from notebookutils import mssparkutils\r\n",
					"\r\n",
					"# https://testfansynapseadlsgen2.blob.core.windows.net/log/sample.csv\r\n",
					"myfile = 'abfss://log@testfansynapseadlsgen2.dfs.core.windows.net/sample.csv'\r\n",
					"mssparkutils.fs.ls(myfile)"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from notebookutils import mssparkutils\r\n",
					"\r\n",
					"# https://testfansynapseadlsgen2.blob.core.windows.net/log/sample.csv\r\n",
					"myfile = 'abfss://log@testfansynapseadlsgen2.dfs.core.windows.net/'\r\n",
					"mssparkutils.fs.ls(myfile)"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"import logging\r\n",
					"\r\n",
					"logger = logging.getLogger()\r\n",
					"logger.setLevel(logging.DEBUG)\r\n",
					"\r\n",
					"formatter = logging.Formatter('%(asctime)s - %(levelname)s - %(message)s')\r\n",
					"\r\n",
					"#ファイルへ出力するハンドラーを定義\r\n",
					"fh = logging.FileHandler(filename=myfile, encoding='utf-8')\r\n",
					"fh.setLevel(logging.DEBUG)\r\n",
					"fh.setFormatter(formatter)\r\n",
					"#rootロガーにハンドラーを登録する\r\n",
					"logger.addHandler(fh)\r\n",
					"\r\n",
					"logger.debug(\"ログに出力\")\r\n",
					"logger.info(\"ログに出力\")\r\n",
					"logger.warning(\"ログに出力\")\r\n",
					"logger.error(\"ログに出力\")"
				]
			}
		]
	}
}