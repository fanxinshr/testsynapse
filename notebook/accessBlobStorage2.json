{
	"name": "accessBlobStorage2",
	"properties": {
		"folder": {
			"name": "AccessADLSGen2"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "testconf",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "56g",
			"driverCores": 8,
			"executorMemory": "56g",
			"executorCores": 8,
			"numExecutors": 2,
			"runAsWorkspaceSystemIdentity": false,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "78b62bc0-20bb-4a8b-bd8d-a39de6ae68c6"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/cc7a7151-8b95-49b7-aaf9-6802e1f1f6d2/resourceGroups/test-synapse1/providers/Microsoft.Synapse/workspaces/test-synapse1-fan/bigDataPools/testconf",
				"name": "testconf",
				"type": "Spark",
				"endpoint": "https://test-synapse1-fan.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/testconf",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.3",
				"nodeCount": 10,
				"cores": 8,
				"memory": 56,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"%pip install fsspec\r\n",
					"%pip install adlfs"
				],
				"execution_count": 91
			},
			{
				"cell_type": "code",
				"source": [
					"from pyspark.sql import SparkSession\r\n",
					"\r\n",
					"# Azure storage access info\r\n",
					"blob_account_name = 'testsynpaseblobstorage' # replace with your blob name\r\n",
					"blob_container_name = 'testcontainer' # replace with your container name\r\n",
					"blob_relative_path = 'test/sample.csv' # replace with your relative folder path\r\n",
					"linked_service_name = 'AzureBlobStorage11' # replace with your linked service name\r\n",
					"\r\n",
					"blob_sas_token = mssparkutils.credentials.getConnectionStringOrCreds(linked_service_name)\r\n",
					"\r\n",
					"# Allow SPARK to access from Blob remotely\r\n",
					"\r\n",
					"wasb_path = 'wasbs://%s@%s.blob.core.windows.net/%s' % (blob_container_name, blob_account_name, blob_relative_path)\r\n",
					"\r\n",
					"spark.conf.set('fs.azure.sas.%s.%s.blob.core.windows.net' % (blob_container_name, blob_account_name), blob_sas_token)\r\n",
					"# print('Remote blob path: ' + wasb_path)\r\n",
					"\r\n",
					"import fsspec\r\n",
					"\r\n",
					"# 'abfss://log@testfansynapseadlsgen2.dfs.core.windows.net/'\r\n",
					"\r\n",
					"fs = fsspec.filesystem('abfss')\r\n",
					"print(fs.ls(\".\"))\r\n",
					"print(fs.ls(\"test\"))\r\n",
					"fs.ls(\"abfss://log@testfansynapseadlsgen2.dfs.core.windows.net/\", blob_sas_token)\r\n",
					""
				],
				"execution_count": 92
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"import fsspec\r\n",
					"\r\n",
					"# 'abfss://log@testfansynapseadlsgen2.dfs.core.windows.net/'\r\n",
					"\r\n",
					"fs = fsspec.filesystem('abfss')\r\n",
					"print(fs.ls(\".\"))\r\n",
					"print(fs.ls(\"test\"))\r\n",
					"\r\n",
					"\r\n",
					"fsspec\r\n",
					"\r\n",
					"fs.ls(\"abfss://log@testfansynapseadlsgen2.dfs.core.windows.net/\")\r\n",
					"\r\n",
					"# fsspec.dircache()\r\n",
					"\r\n",
					"# print(fs.ls('abfss://log@testfansynapseadlsgen2.dfs.core.windows.net/'))\r\n",
					"\r\n",
					"from notebookutils import mssparkutils\r\n",
					"\r\n",
					"# https://testfansynapseadlsgen2.blob.core.windows.net/log/sample.csv\r\n",
					"myfile = 'abfss://log@testfansynapseadlsgen2.dfs.core.windows.net/'\r\n",
					"mssparkutils.fs.ls(myfile)\r\n",
					"\r\n",
					"\r\n",
					""
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"import fsspec\r\n",
					"import pandas\r\n",
					"\r\n",
					"adls_account_name = '' #Provide exact ADLS account name\r\n",
					"sas_key = TokenLibrary.getConnectionString(<LinkedServiceName>)"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"df = spark.read.load('wasbs://testcontainer@testsynpaseblobstorage.blob.core.windows.net/test/sample.csv', format='csv')"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"df.show()"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"df.select(\"_c1\").write.format(\"parquet\").save(\"wasbs://testcontainer@testsynpaseblobstorage.blob.core.windows.net/test/c1.parquet\")"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"import fsspec\r\n",
					"storage_options={'account_name': 'testfansynapseadlsgen2', 'tenant_id': '72f988bf-86f1-41af-91ab-2d7cd011db47', 'client_id': '494ab310-3b17-4792-8b3d-31d1f15f0c52', 'client_secret': 'G6k8Q~syYxNBy4oVrarc.AZ-ZXpjhCOc4H6V-bWw'}\r\n",
					"fs = fsspec.filesystem(\"abfss\",**storage_options)\r\n",
					"print(fs.ls(\".\"))\r\n",
					"print(fs.ls(\"log\"))"
				],
				"execution_count": 93
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"import glob\r\n",
					"\r\n",
					"# wasbs://testcontainer@testsynpaseblobstorage.blob.core.windows.net/test/\r\n",
					"\r\n",
					"filename = \"wasbs://testcontainer@testsynpaseblobstorage.blob.core.windows.net/test/\"\r\n",
					"\r\n",
					"l = [pd.read_csv(filename) for filename in glob.glob(\"*.csv\")]\r\n",
					"print(l)\r\n",
					""
				],
				"execution_count": null
			}
		]
	}
}