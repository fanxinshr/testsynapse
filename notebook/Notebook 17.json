{
	"name": "Notebook 17",
	"properties": {
		"folder": {
			"name": "test"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"runAsWorkspaceSystemIdentity": false,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "c1afb954-5bce-4434-9b2a-67da6885d59f"
			}
		},
		"metadata": {
			"saveOutput": true,
			"synapse_widget": {
				"version": "0.1"
			},
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "python"
			},
			"language_info": {
				"name": "python"
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"from pyspark.sql import SparkSession\r\n",
					"from pyspark.sql.types import *\r\n",
					"\r\n",
					"account_name = \"testfansynapseadlsgen2\"\r\n",
					"container_name = \"headertest\"\r\n",
					"relative_path = \"test\"\r\n",
					"\r\n",
					"adls_path = 'abfss://%s@%s.dfs.core.windows.net/%s' % (container_name, account_name, relative_path)\r\n",
					"\r\n",
					"dataframe = spark.read.option('header','false').text(adls_path+'/incoming2.dat')\r\n",
					"\r\n",
					"result = []\r\n",
					"record_flag = True\r\n",
					"appendtemp = ''\r\n",
					"\r\n",
					"for row in dataframe.rdd.collect():\r\n",
					"    # print(\"============\")\r\n",
					"    # print(row)\r\n",
					"    # print(row.value)\r\n",
					"    # print(type(row))\r\n",
					"    # print(type(row.value))\r\n",
					"    # print(len(row.value))\r\n",
					"    \r\n",
					"    if len(row.value) > 46:\r\n",
					"        if appendtemp:\r\n",
					"            result.append(appendtemp + \"                     00000\")\r\n",
					"            record_flag = True\r\n",
					"\r\n",
					"        # spilt into 4 parts\r\n",
					"        temp = [row.value[i:i+80] for i in range(0,len(row.value),80)]\r\n",
					"        for item in temp:\r\n",
					"            result.append(item)\r\n",
					"    else:\r\n",
					"        if record_flag: \r\n",
					"            appendtemp = row.value\r\n",
					"            record_flag = False\r\n",
					"        else:\r\n",
					"            result.append(appendtemp+row.value[5:])\r\n",
					"            appendtemp = ''\r\n",
					"            record_flag = True\r\n",
					"\r\n",
					"if appendtemp:\r\n",
					"    result.append(appendtemp + \"                     00000\")\r\n",
					"\r\n",
					"\r\n",
					"print(result)\r\n",
					"\r\n",
					"\r\n",
					"date_df= spark.createDataFrame([(l,) for l in result])\r\n",
					"\r\n",
					"date_df.show()\r\n",
					"\r\n",
					"date_df.coalesce(1).write.format(\"text\").option(\"header\", \"false\").mode(\"append\").save(adls_path+\"/output.txt\")"
				]
			}
		]
	}
}