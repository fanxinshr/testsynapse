{
	"name": "AccessDB",
	"properties": {
		"folder": {
			"name": "AccessDatabase"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "testconf",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "56g",
			"driverCores": 8,
			"executorMemory": "56g",
			"executorCores": 8,
			"numExecutors": 2,
			"runAsWorkspaceSystemIdentity": false,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "3d2815a8-679f-4925-8cbd-b422592d3bbc"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/cc7a7151-8b95-49b7-aaf9-6802e1f1f6d2/resourceGroups/test-synapse1/providers/Microsoft.Synapse/workspaces/test-synapse1-fan/bigDataPools/testconf",
				"name": "testconf",
				"type": "Spark",
				"endpoint": "https://test-synapse1-fan.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/testconf",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.3",
				"nodeCount": 10,
				"cores": 8,
				"memory": 56,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"# Add required imports\r\n",
					"import com.microsoft.spark.sqlanalytics\r\n",
					"from com.microsoft.spark.sqlanalytics.Constants import Constants\r\n",
					"from pyspark.sql.functions import col \r\n",
					"\r\n",
					"# Read from existing internal table\r\n",
					"# test-synapse1-fan.sql.azuresynapse.net\r\n",
					"dfToReadFromTable = (spark.read.option(Constants.SERVER, \"mysqlservercup.database.windows.net\")\r\n",
					"    .option(Constants.USER, \"azureuser\")\r\n",
					"    .option(Constants.PASSWORD, \"Pa$$w0rd\")\r\n",
					"    .synapsesql(\"mySampleDatabase.dbo.test1\")\r\n",
					"    .select(\"*\")\r\n",
					"    .limit(2)) \r\n",
					"\r\n",
					"# Show contents of the dataframe\r\n",
					"dfToReadFromTable.show()\r\n",
					"\r\n",
					"print(dfToReadFromTable)\r\n",
					"print(\"==================\")\r\n",
					"dfToReadFromTable.printSchema()\r\n",
					"\r\n",
					"\r\n",
					"print(dfToReadFromTable.limit(10))"
				],
				"execution_count": 3
			}
		]
	}
}